find_package(PkgConfig)
pkg_check_modules(GTEST REQUIRED IMPORTED_TARGET gtest)
pkg_check_modules(PYTHON REQUIRED IMPORTED_TARGET python3-embed)
if (NOT PYTHON_FOUND)
    pkg_check_modules(PYTHON REQUIRED IMPORTED_TARGET python3)
endif (NOT PYTHON_FOUND)

macro(extr_unit_test)
    set(oneValueArgs NAME)
    set(multiValueArgs FILES)
    cmake_parse_arguments(ARG
                          ""
                          "${oneValueArgs}"
                          "${multiValueArgs}"
                          ${ARGN}
    )
    add_executable(
        ${ARG_NAME}
        "${CMAKE_CURRENT_SOURCE_DIR}/${ARG_NAME}.cpp"
        ${ARG_FILES}
    )
    target_include_directories(
        ${ARG_NAME}
        PUBLIC
        "${EXTRACTOR_INC_DIR}"
        "${EXTRACTOR_SRC_DIR}"
    )
    target_link_libraries(
        ${ARG_NAME}
        PUBLIC
        fmc++
        ytp
        rlm
        PkgConfig::GTEST
        PkgConfig::PYTHON
    )
    add_test(NAME ${ARG_NAME} COMMAND ${ARG_NAME} ${CMAKE_CURRENT_SOURCE_DIR})
endmacro()

extr_unit_test(
    NAME
    time64_serial
)
extr_unit_test(
    NAME
    arg_stack
    FILES
    "${EXTRACTOR_SRC_DIR}/arg_stack.cpp"
)
extr_unit_test(
    NAME
    arg_serial
    FILES
    "${EXTRACTOR_SRC_DIR}/arg_stack.cpp"
    "${EXTRACTOR_SRC_DIR}/arg_serial.cpp"
    "${EXTRACTOR_SRC_DIR}/type_sys.cpp"
    "${EXTRACTOR_SRC_DIR}/type_space.cpp"
    "${EXTRACTOR_SRC_DIR}/type_error.cpp"
    "${EXTRACTOR_SRC_DIR}/type_decl.cpp"
    "${EXTRACTOR_SRC_DIR}/rational64.cpp"
)
extr_unit_test(
    NAME
    call_stack
    FILES
    "${EXTRACTOR_SRC_DIR}/call_stack.cpp"
)
extr_unit_test(
    NAME
    comp_graph
    FILES
    "${EXTRACTOR_SRC_DIR}/comp_graph.cpp"
)
extr_unit_test(
    NAME
    exec_ctx
    FILES
    "${EXTRACTOR_SRC_DIR}/call_obj.cpp"
    "${EXTRACTOR_SRC_DIR}/comp_graph.cpp"
    "${EXTRACTOR_SRC_DIR}/call_stack.cpp"
    "${EXTRACTOR_SRC_DIR}/stream_ctx.cpp"
    "${EXTRACTOR_SRC_DIR}/exec_ctx.cpp"
)
extr_unit_test(
    NAME
    comp_sys
    FILES
    "${EXTRACTOR_SRC_DIR}/arg_stack.cpp"
    "${EXTRACTOR_SRC_DIR}/arg_serial.cpp"
    "${EXTRACTOR_SRC_DIR}/comp.cpp"
    "${EXTRACTOR_SRC_DIR}/call_obj.cpp"
    "${EXTRACTOR_SRC_DIR}/comp_graph.cpp"
    "${EXTRACTOR_SRC_DIR}/call_stack.cpp"
    "${EXTRACTOR_SRC_DIR}/stream_ctx.cpp"
    "${EXTRACTOR_SRC_DIR}/comp_sys.cpp"
    "${EXTRACTOR_SRC_DIR}/comp_def_simp.cpp"
    "${EXTRACTOR_SRC_DIR}/comp_def.cpp"
    "${EXTRACTOR_SRC_DIR}/type_sys.cpp"
    "${EXTRACTOR_SRC_DIR}/type_space.cpp"
    "${EXTRACTOR_SRC_DIR}/type_error.cpp"
    "${EXTRACTOR_SRC_DIR}/type_decl.cpp"
    "${EXTRACTOR_SRC_DIR}/exec_ctx.cpp"
    "${EXTRACTOR_SRC_DIR}/rational64.cpp"
)
extr_unit_test(
    NAME
    type_sys
    FILES
    "${EXTRACTOR_SRC_DIR}/type_sys.cpp"
    "${EXTRACTOR_SRC_DIR}/type_space.cpp"
    "${EXTRACTOR_SRC_DIR}/type_error.cpp"
    "${EXTRACTOR_SRC_DIR}/type_decl.cpp"
    "${EXTRACTOR_SRC_DIR}/rational64.cpp"
)
extr_unit_test(
    NAME
    tests
    FILES
    $<TARGET_OBJECTS:extractor_obj>
    $<TARGET_OBJECTS:py_extractor_obj>
)
